import React, { useState } from 'react';
import { Wrench, AlertTriangle, CheckCircle, Clock, MapPin, Eye, Plus } from 'lucide-react';

const MaintenancePlantOverview = () => {
  const [selectedMaintenanceItem, setSelectedMaintenanceItem] = useState(null);
  const [showAddForm, setShowAddForm] = useState(false);
  const [newMaintenancePosition, setNewMaintenancePosition] = useState(null);

  // Beispiel-Instandhaltungsmaßnahmen
  const [maintenanceItems, setMaintenanceItems] = useState([
    {
      id: 1,
      title: "Pumpe A-101 Wartung",
      type: "routine",
      priority: "medium",
      status: "scheduled",
      dueDate: "2025-07-20",
      description: "Routinewartung der Hauptpumpe",
      position: { x: 250, y: 150 }
    },
    {
      id: 2,
      title: "Ventil B-205 Reparatur",
      type: "repair",
      priority: "high",
      status: "urgent",
      dueDate: "2025-07-17",
      description: "Undichtheit am Hauptventil",
      position: { x: 450, y: 200 }
    },
    {
      id: 3,
      title: "Kompressor C-301 Inspektion",
      type: "inspection",
      priority: "low",
      status: "completed",
      dueDate: "2025-07-15",
      description: "Jährliche Sicherheitsinspektion",
      position: { x: 350, y: 300 }
    },
    {
      id: 4,
      title: "Förderband D-401 Überholung",
      type: "overhaul",
      priority: "medium",
      status: "in_progress",
      dueDate: "2025-07-25",
      description: "Große Überholung des Förderbandes",
      position: { x: 150, y: 250 }
    }
  ]);

  const getStatusColor = (status) => {
    switch(status) {
      case 'urgent': return 'bg-red-500 border-red-600';
      case 'scheduled': return 'bg-blue-500 border-blue-600';
      case 'in_progress': return 'bg-yellow-500 border-yellow-600';
      case 'completed': return 'bg-green-500 border-green-600';
      default: return 'bg-gray-500 border-gray-600';
    }
  };

  const getPriorityColor = (priority) => {
    switch(priority) {
      case 'high': return 'text-red-600';
      case 'medium': return 'text-yellow-600';
      case 'low': return 'text-green-600';
      default: return 'text-gray-600';
    }
  };

  const getStatusIcon = (status) => {
    switch(status) {
      case 'urgent': return <AlertTriangle className="w-4 h-4" />;
      case 'scheduled': return <Clock className="w-4 h-4" />;
      case 'in_progress': return <Wrench className="w-4 h-4" />;
      case 'completed': return <CheckCircle className="w-4 h-4" />;
      default: return <MapPin className="w-4 h-4" />;
    }
  };

  const getStatusText = (status) => {
    switch(status) {
      case 'urgent': return 'Dringend';
      case 'scheduled': return 'Geplant';
      case 'in_progress': return 'In Bearbeitung';
      case 'completed': return 'Abgeschlossen';
      default: return 'Unbekannt';
    }
  };

  const handleMapClick = (event) => {
    if (showAddForm) {
      const rect = event.currentTarget.getBoundingClientRect();
      const x = event.clientX - rect.left;
      const y = event.clientY - rect.top;
      setNewMaintenancePosition({ x, y });
    }
  };

  const addNewMaintenanceItem = (data) => {
    if (newMaintenancePosition) {
      const newItem = {
        id: Date.now(),
        ...data,
        position: newMaintenancePosition
      };
      setMaintenanceItems([...maintenanceItems, newItem]);
      setShowAddForm(false);
      setNewMaintenancePosition(null);
    }
  };

  return (
    <div className="bg-white rounded-lg shadow-lg p-6 max-w-6xl mx-auto">
      <div className="flex justify-between items-center mb-6">
        <h2 className="text-2xl font-bold text-gray-800">Werks-Übersichtsplan</h2>
        <div className="flex gap-2">
          <button
            onClick={() => setShowAddForm(!showAddForm)}
            className={`px-4 py-2 rounded-lg flex items-center gap-2 ${
              showAddForm 
                ? 'bg-red-500 hover:bg-red-600 text-white' 
                : 'bg-blue-500 hover:bg-blue-600 text-white'
            }`}
          >
            <Plus className="w-4 h-4" />
            {showAddForm ? 'Abbrechen' : 'Neue Maßnahme'}
          </button>
        </div>
      </div>

      <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
        {/* Werksplan */}
        <div className="lg:col-span-2">
          <div className="bg-gray-50 rounded-lg border-2 border-gray-200 relative overflow-hidden">
            {showAddForm && (
              <div className="absolute top-2 left-2 bg-blue-100 text-blue-800 px-3 py-1 rounded text-sm z-10">
                Klicken Sie auf die Karte, um eine neue Maßnahme hinzuzufügen
              </div>
            )}
            
            <svg
              width="100%"
              height="400"
              viewBox="0 0 600 400"
              className="cursor-pointer"
              onClick={handleMapClick}
            >
              {/* Beispiel-Werksplan Hintergrund */}
              <rect width="600" height="400" fill="#f8f9fa" />
              
              {/* Gebäude/Bereiche */}
              <rect x="50" y="50" width="150" height="100" fill="#e9ecef" stroke="#6c757d" strokeWidth="2" />
              <text x="125" y="105" textAnchor="middle" className="text-sm font-medium">Produktionshalle A</text>
              
              <rect x="250" y="50" width="150" height="100" fill="#e9ecef" stroke="#6c757d" strokeWidth="2" />
              <text x="325" y="105" textAnchor="middle" className="text-sm font-medium">Produktionshalle B</text>
              
              <rect x="450" y="50" width="100" height="100" fill="#e9ecef" stroke="#6c757d" strokeWidth="2" />
              <text x="500" y="105" textAnchor="middle" className="text-sm font-medium">Lager</text>
              
              <rect x="50" y="200" width="200" height="150" fill="#e9ecef" stroke="#6c757d" strokeWidth="2" />
              <text x="150" y="280" textAnchor="middle" className="text-sm font-medium">Werkstatt</text>
              
              <rect x="300" y="200" width="250" height="150" fill="#e9ecef" stroke="#6c757d" strokeWidth="2" />
              <text x="425" y="280" textAnchor="middle" className="text-sm font-medium">Hauptproduktion</text>
              
              {/* Instandhaltungsmaßnahmen auf der Karte */}
              {maintenanceItems.map((item) => (
                <g key={item.id}>
                  <circle
                    cx={item.position.x}
                    cy={item.position.y}
                    r="12"
                    className={`${getStatusColor(item.status)} cursor-pointer stroke-2 hover:scale-110 transition-transform`}
                    onClick={(e) => {
                      e.stopPropagation();
                      setSelectedMaintenanceItem(item);
                    }}
                  />
                  <text
                    x={item.position.x}
                    y={item.position.y + 4}
                    textAnchor="middle"
                    className="text-white text-xs font-bold pointer-events-none"
                  >
                    {item.id}
                  </text>
                </g>
              ))}
              
              {/* Neue Position Vorschau */}
              {newMaintenancePosition && (
                <circle
                  cx={newMaintenancePosition.x}
                  cy={newMaintenancePosition.y}
                  r="12"
                  className="fill-blue-300 stroke-blue-500 stroke-2 opacity-50"
                />
              )}
            </svg>
          </div>
          
          {/* Legende */}
          <div className="mt-4 flex flex-wrap gap-4">
            <div className="flex items-center gap-2">
              <div className="w-4 h-4 bg-red-500 rounded-full"></div>
              <span className="text-sm">Dringend</span>
            </div>
            <div className="flex items-center gap-2">
              <div className="w-4 h-4 bg-blue-500 rounded-full"></div>
              <span className="text-sm">Geplant</span>
            </div>
            <div className="flex items-center gap-2">
              <div className="w-4 h-4 bg-yellow-500 rounded-full"></div>
              <span className="text-sm">In Bearbeitung</span>
            </div>
            <div className="flex items-center gap-2">
              <div className="w-4 h-4 bg-green-500 rounded-full"></div>
              <span className="text-sm">Abgeschlossen</span>
            </div>
          </div>
        </div>

        {/* Seitenleiste */}
        <div className="space-y-4">
          <h3 className="text-lg font-semibold text-gray-800">Instandhaltungsmaßnahmen</h3>
          
          {/* Liste der Maßnahmen */}
          <div className="space-y-3 max-h-96 overflow-y-auto">
            {maintenanceItems.map((item) => (
              <div
                key={item.id}
                className={`p-3 rounded-lg border-2 cursor-pointer transition-all ${
                  selectedMaintenanceItem?.id === item.id
                    ? 'border-blue-500 bg-blue-50'
                    : 'border-gray-200 hover:border-gray-300'
                }`}
                onClick={() => setSelectedMaintenanceItem(item)}
              >
                <div className="flex items-start justify-between">
                  <div className="flex-1">
                    <div className="flex items-center gap-2 mb-1">
                      <span className={`w-3 h-3 rounded-full ${getStatusColor(item.status)}`}></span>
                      <span className="font-medium text-sm">{item.title}</span>
                    </div>
                    <p className="text-xs text-gray-600 mb-1">{item.description}</p>
                    <div className="flex items-center gap-2 text-xs text-gray-500">
                      <span className={getPriorityColor(item.priority)}>
                        {item.priority === 'high' ? 'Hoch' : item.priority === 'medium' ? 'Mittel' : 'Niedrig'}
                      </span>
                      <span>•</span>
                      <span>{item.dueDate}</span>
                    </div>
                  </div>
                  <div className="flex items-center gap-1">
                    <span className="text-xs bg-gray-100 px-2 py-1 rounded">#{item.id}</span>
                  </div>
                </div>
              </div>
            ))}
          </div>

          {/* Detailansicht */}
          {selectedMaintenanceItem && (
            <div className="bg-gray-50 rounded-lg p-4 border">
              <h4 className="font-semibold text-gray-800 mb-2">Details</h4>
              <div className="space-y-2 text-sm">
                <div className="flex justify-between">
                  <span className="text-gray-600">Status:</span>
                  <span className="flex items-center gap-1">
                    {getStatusIcon(selectedMaintenanceItem.status)}
                    {getStatusText(selectedMaintenanceItem.status)}
                  </span>
                </div>
                <div className="flex justify-between">
                  <span className="text-gray-600">Priorität:</span>
                  <span className={getPriorityColor(selectedMaintenanceItem.priority)}>
                    {selectedMaintenanceItem.priority === 'high' ? 'Hoch' : 
                     selectedMaintenanceItem.priority === 'medium' ? 'Mittel' : 'Niedrig'}
                  </span>
                </div>
                <div className="flex justify-between">
                  <span className="text-gray-600">Fälligkeitsdatum:</span>
                  <span>{selectedMaintenanceItem.dueDate}</span>
                </div>
                <div className="flex justify-between">
                  <span className="text-gray-600">Typ:</span>
                  <span>{selectedMaintenanceItem.type}</span>
                </div>
              </div>
            </div>
          )}
        </div>
      </div>

      {/* Formular für neue Maßnahme */}
      {showAddForm && newMaintenancePosition && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
          <div className="bg-white rounded-lg p-6 w-96">
            <h3 className="text-lg font-semibold mb-4">Neue Instandhaltungsmaßnahme</h3>
            <div>
              <div className="space-y-4">
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">Titel</label>
                  <input
                    type="text"
                    name="title"
                    required
                    className="w-full p-2 border border-gray-300 rounded-md"
                    placeholder="z.B. Pumpe A-101 Wartung"
                  />
                </div>
                
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">Typ</label>
                  <select name="type" required className="w-full p-2 border border-gray-300 rounded-md">
                    <option value="routine">Routinewartung</option>
                    <option value="repair">Reparatur</option>
                    <option value="inspection">Inspektion</option>
                    <option value="overhaul">Überholung</option>
                  </select>
                </div>
                
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">Priorität</label>
                  <select name="priority" required className="w-full p-2 border border-gray-300 rounded-md">
                    <option value="low">Niedrig</option>
                    <option value="medium">Mittel</option>
                    <option value="high">Hoch</option>
                  </select>
                </div>
                
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">Status</label>
                  <select name="status" required className="w-full p-2 border border-gray-300 rounded-md">
                    <option value="scheduled">Geplant</option>
                    <option value="urgent">Dringend</option>
                    <option value="in_progress">In Bearbeitung</option>
                    <option value="completed">Abgeschlossen</option>
                  </select>
                </div>
                
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">Fälligkeitsdatum</label>
                  <input
                    type="date"
                    name="dueDate"
                    required
                    className="w-full p-2 border border-gray-300 rounded-md"
                  />
                </div>
                
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">Beschreibung</label>
                  <textarea
                    name="description"
                    rows="3"
                    className="w-full p-2 border border-gray-300 rounded-md"
                    placeholder="Beschreibung der Maßnahme..."
                  />
                </div>
              </div>
              
              <div className="flex gap-2 mt-6">
                <button
                  type="button"
                  onClick={() => {
                    const title = document.querySelector('input[name="title"]').value;
                    const type = document.querySelector('select[name="type"]').value;
                    const priority = document.querySelector('select[name="priority"]').value;
                    const status = document.querySelector('select[name="status"]').value;
                    const dueDate = document.querySelector('input[name="dueDate"]').value;
                    const description = document.querySelector('textarea[name="description"]').value;
                    
                    if (title && type && priority && status && dueDate) {
                      addNewMaintenanceItem({
                        title, type, priority, status, dueDate, description
                      });
                    }
                  }}
                  className="flex-1 bg-blue-500 text-white py-2 px-4 rounded-md hover:bg-blue-600"
                >
                  Hinzufügen
                </button>
                <button
                  type="button"
                  onClick={() => {
                    setShowAddForm(false);
                    setNewMaintenancePosition(null);
                  }}
                  className="flex-1 bg-gray-500 text-white py-2 px-4 rounded-md hover:bg-gray-600"
                >
                  Abbrechen
                </button>
              </div>
            </div>
          </div>
        </div>
      )}
    </div>
  );
};

export default MaintenancePlantOverview;